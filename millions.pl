#!/usr/bin/perl
use strict;
use warnings;
use Text::CSV;
use LWP::Simple;
use File::stat;
use Time::localtime;
use Image::Magick;
use CGI qw(escapeHTML);
use URI::Find;
use Scalar::Util qw(looks_like_number);

# Format of Datafile
#TRA#, Member Name
use constant MEMBERSHIPID => 0;
use constant NAME => 1;

# Top-level directory where data is stored
# Not: Class (command line option) is appended to this
# Resulting URI element would be $DATADIR/$CLASS
my $TOPDIR = "records/";
my $DATADIR = $TOPDIR."data";
my $URIDIR = "data";

my $csv = Text::CSV->new ({
    binary    => 1, # Allow special character. Always set this
    auto_diag => 1, # Report irregularities immediately
});

my $file = $ARGV[0] or die "usage: [file] Class\nerror:no CSV filename provided on the command line\n";
my $record_class = $ARGV[1] or die "usage: [file] Class\nerror:no Record class provided on the command line\n";

$record_class = lc $record_class;
print "Record Class[$record_class]\n";

$DATADIR .= "/$record_class/";
$URIDIR .= "/$record_class/";

print "TOP DIR=$TOPDIR\n";
print "DATA DIR=$DATADIR\n";
print "URI DIR=$URIDIR\n";

system "mkdir -p $DATADIR";
my @rows;
my @row;
open(my $data, "<:encoding(utf8)", $file) or die "Could not open '$file' $!\n";

# Skip past headers (first line)
my $header = $csv->getline($data);

while (my $row = $csv->getline($data)) {
	push @rows, $row;
}


sub print_table{ 

    print <<'DELIMETER'
	<table width="643" height="881">
	<tbody>
        <tr>
            <td colspan="2" style="height: 32px; text-align: center; background-color: #7f7f7f;"><a name="single_class">&nbsp;</a><strong><span style="font-size: 16px; color: #ffffff;">$record_class </span></strong></td>
        </tr>


DELIMETER
;
}

# --- Main --- #
my $outputfile = "$TOPDIR$record_class.html";

open(my $fh, '>', $outputfile) or die "Error: could not open output file[$outputfile]\n";
#print $fh "My first report generated by perl\n";
print "Outputting HTML [$outputfile]\n";

print $fh "<html lang=\"en\">\n";
print $fh "<head>\n";
print $fh "<meta charset=\"utf-8\">\n";
print $fh "<link rel=\"stylesheet\" href=\"style.css\">\n";
print $fh "</head>\n";
print $fh "<body>\n";
print $fh "<TITLE> Tripoli Records - ", ucfirst $record_class, "</TITLE>\n";
print $fh "<A HREF=\"http:\/\/www.tripoli.org/\"><IMG BORDER=0 SRC=\"http://www.tripoli.org/Portals/1/Images/Tripoli/tripoli_logosp75.png\"></A>\n";
print $fh "<H1> Cumulative Altitude - ", ucfirst $record_class, " of Feet</H1>\n";
print $fh "<p> The below fliers have achieved a cumulative million feet in altitude over all flights submitted. </p>\n";
print $fh "<table id=\"records_table\">\n<thead>\n<tr>\n";
print $fh "<th>$header->[MEMBERSHIPID]</th>\n";
print $fh "<th>$header->[NAME]</th>\n</thead>\n";

for my $r (@rows) {
    $csv->combine(@$r);
    my $cnt = 0;
    my $str = sprintf("%05d", $r->[MEMBERSHIPID]);
    print $fh "<tr><td> $str</td>\n";
    print $fh "<td>$r->[NAME]</td></tr>\n";
}
print $fh "</table>\n";
print $fh "<hr>\n";
print $fh "<H6> Last updated:", ctime(time()), "</H6>\n";
print $fh "<script type=\"text/javascript\">\n";
print $fh "<!--\n";
print $fh "var TSort_Data = new Array ('records_table', '','s','','n','n','d','','');\n";
print $fh "var TSort_Initial = new Array ('3D', '4D');\n";
print $fh "tsRegister();\n";
print $fh "// -->\n</script>\n";

print $fh "</html>\n";

# close output file
close $fh;



