In order to maintain a top-10 list in each category (or top-20 in each
category) the database and all records need to be externalized from
the TRA Website and the data needs to be ordered and validated
separately.


The following record categories are maintained:

 - Single
 - Complex
 - Research
 - Handicapped
 - Hybrid

The following fields are maintained in each record class in the order
specified below. Image and Altimeter file URL's are a comma separated
list of values.

- Class (one of the above categories - e.g. Single)
- Type (Record type - Commercial, Staged/clustered)
- Rocket Motor (Motor Designation)
- Total Impulse (Total Newton-seconds)
- Name - Flier or Group name
- Altitude - Altitude in AGL (AGL = Alt MSL - Launch Elevation MSL)
- Altimeters (include GPS model if > 30K) - Manufacturer/Model
- Date - Date in MM/DD/YYYY format
- Location - Launch site location
- GPS URL - Retrievable URL for GPS data (log,nmea,kml,kmz)
- Image URL - Comma separated list of Image URL's
- Altimeter URL - Retrievable URL for Altimeter data (comma separated list)
- Notes - Any notes or additional data, Links to URL's will be converted HTML
- Historical - > 10 years or special record for this clas

Data Entry

Records are stored in sorted order, first by impulse and then by altitude.

In the event of a tie-breaker (multiple fliers for one motor), the
altitude has priority and shall be listed in increasing value (top to
bottom in the rows) - e.g. the record with the highest altitude comes
last in that record category.

URL's and File Names 

If spaces are used, the URL will be escaped and have a horrible path string
which very few people can copy or use. 

Where possible, do not use spaces in your filenames or URL's. Every
attempt is made to replace spaces and commas with underscores, but in
some cases this may not work. Use dashes (-) or underscores (_) where
a space would be used instead.


Accessing the Data

The new TRA records are organized as an online Worksheet.
Google Docs data site, visit:

https://docs.google.com/spreadsheets/d/1TyOoQozv5HACx6wPa4pjyMuosS_sWBssMZJQsVLkxCg/edit?usp=sharing

There is a sheet for each record class. Data is categorized in the
correct record class and then input on the sheet with the data entry
rules specified above.


Generating the Website Data

First, each Sheet is exported to a file:

TripoliRecords2016-Complex.csv	    
TripoliRecords2016-Research.csv
TripoliRecords2016-Handicapped.csv  
TripoliRecords2016-Single.csv
TripoliRecords2016-Hybrid.csv

Then, the records generator script (records.pl) is run on each file
with the string provided for the record class. Below is an example
of how to update all of the pages/data for each record category.


//run_all.sh

#!/bin/sh
./records.pl TripoliRecords2016-Single.csv single
./records.pl TripoliRecords2016-Research.csv research
./records.pl TripoliRecords2016-Complex.csv complex
./records.pl TripoliRecords2016-Hybrid.csv hybrid
./records.pl TripoliRecords2016-Handicapped.csv handicapped

The resulting "records" directory will contain:



no-image.png  - Icon for downloadable link - Missing Image
electronics.png  - Icon for downloadable link - Electronics files
gps-icon.png     - Icon for downloadable link - GPS Files

single.html	 - Single record category autogenerated file
handicapped.html - Handicapped record category autogenerated file
complex.html	 - Complex record category autogenerated file
hybrid.html	 - Hybrid record category autogenerated file
research.html    - Research record category autogenerated file
data		 - Autogenerated data directory (Images, GPS, Altimeter, etc)
style.css      	 - Configurable CSS Style
gs_sortable.js   - Open Source data sorting Javascript Library
index.html       - Optional Index file


It should be suitable to upload the records directory in its entirety
to an HTTP server to see the end product, an example is below:

http://www.realflightsystems.com/techpubs/data/TRA-Records/work/records/
http://www.realflightsystems.com/techpubs/data/TRA-Records/work/records.tar.gz
http://tripoli-records.org/records/

Source files:

records.pl - Perl script to parse CSV and process to generate HTML and data

